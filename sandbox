<!DOCTYPE html><html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Wizz Sandbox — Smokey’s Space</title>
  <style>
    :root{
      --bg:#0b0f17;           /* deep space */
      --panel:#121829;        /* glass panel */
      --panel-2:#0e1422;
      --ink:#e6f0ff;          /* text */
      --muted:#9bb0d1;        /* secondary */
      --accent:#47b0ff;       /* electric blue */
      --accent-2:#8a5cff;     /* plasma violet */
      --good:#2ecc71;         /* ok */
      --warn:#ffcc00;
      --bad:#ff5c7a;
      --shadow:0 10px 30px rgba(0,0,0,.45), 0 0 40px rgba(71,176,255,.06);
      --radius:18px;
    }
    [data-theme="light"]{
      --bg:#f6f8fd; --panel:#ffffff; --panel-2:#eef3ff; --ink:#0d1220; --muted:#4c5a78; --shadow:0 8px 24px rgba(17,27,54,.10), 0 0 0 rgba(0,0,0,0);
    }
    html,body{height:100%}
    body{margin:0;background:radial-gradient(1200px 600px at 70% -10%, rgba(71,176,255,.12), transparent 60%),radial-gradient(800px 500px at 10% 120%, rgba(138,92,255,.10), transparent 60%), var(--bg);color:var(--ink);font-family:Inter, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji","Segoe UI Emoji";}/* Header */
.topbar{position:sticky;top:0;z-index:5;display:flex;align-items:center;gap:12px;padding:14px 16px;background:linear-gradient(180deg, rgba(5,8,15,.9), rgba(5,8,15,.55));backdrop-filter:blur(14px);border-bottom:1px solid rgba(135,170,255,.15)}
.logo{display:flex;align-items:center;gap:10px}
.core{width:16px;height:16px;border-radius:50%;background:radial-gradient(circle at 35% 35%, #fff, var(--accent) 50%, #07355e 80%);box-shadow:0 0 24px rgba(71,176,255,.9), inset 0 0 22px rgba(255,255,255,.35)}
.title{font-weight:700;letter-spacing:.4px}

.toolbar{margin-left:auto;display:flex;flex-wrap:wrap;gap:8px}
button{appearance:none;border:none;padding:10px 12px;border-radius:12px;background:linear-gradient(180deg, var(--panel), var(--panel-2));color:var(--ink);box-shadow:var(--shadow);cursor:pointer;font-weight:600;border:1px solid rgba(135,170,255,.22)}
button:hover{transform:translateY(-1px)}
button:active{transform:translateY(0)}
.btn-accent{background:linear-gradient(180deg, rgba(71,176,255,.2), rgba(71,176,255,.08));border-color:rgba(71,176,255,.35)}
.btn-good{background:linear-gradient(180deg, rgba(46,204,113,.25), rgba(46,204,113,.08));border-color:rgba(46,204,113,.4)}
.btn-bad{background:linear-gradient(180deg, rgba(255,92,122,.25), rgba(255,92,122,.08));border-color:rgba(255,92,122,.4)}
.badge{font-size:12px;padding:6px 9px;border-radius:999px;background:rgba(135,170,255,.14);border:1px solid rgba(135,170,255,.25)}

/* Layout */
.grid{display:grid;grid-template-columns:repeat(3, 1fr) 42%;grid-template-rows:1fr;gap:14px;padding:14px;min-height:calc(100dvh - 66px)}

.panel{display:flex;flex-direction:column;border-radius:var(--radius);background:linear-gradient(180deg, rgba(255,255,255,.02), rgba(255,255,255,.01));box-shadow:var(--shadow);border:1px solid rgba(135,170,255,.18);overflow:hidden;min-height:240px}
.panel h3{margin:0;padding:10px 12px;font-size:13px;letter-spacing:.35px;text-transform:uppercase;color:var(--muted);border-bottom:1px solid rgba(135,170,255,.16);background:linear-gradient(180deg, rgba(255,255,255,.03), rgba(255,255,255,.00))}

.editor{position:relative;flex:1}
textarea{width:100%;height:100%;background:transparent;color:var(--ink);border:0;resize:none;outline:none;padding:12px;font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:13.5px;line-height:1.5}
.ghost{position:absolute;inset:0;pointer-events:none;background:linear-gradient(180deg, transparent, rgba(71,176,255,.05));opacity:.6}

iframe{width:100%;height:100%;border:0;background:#fff;border-top:1px solid rgba(135,170,255,.16)}

.footer{display:flex;justify-content:space-between;align-items:center;padding:10px 14px;border-top:1px solid rgba(135,170,255,.16);color:var(--muted);font-size:12px}

/* Responsive */
@media (max-width:1100px){
  .grid{grid-template-columns:1fr;grid-auto-rows:minmax(260px, 48vh)}
  iframe{min-height:42vh}
}

  </style>
</head>
<body>
  <header class="topbar">
    <div class="logo">
      <div class="core" aria-hidden="true"></div>
      <div class="title">Wizz Sandbox</div>
      <span class="badge" id="status">Idle</span>
    </div>
    <div class="toolbar">
      <button class="btn-accent" id="runBtn" title="Run (Ctrl+Enter)">Run ▶</button>
      <button id="autosaveBtn" title="Toggle autosave">Autosave: On</button>
      <button class="btn-good" id="saveBtn" title="Save to browser (Ctrl+S)">Save</button>
      <button id="loadBtn" title="Load last project">Load</button>
      <button id="resetBtn" class="btn-bad" title="Reset editors to blank">Reset</button>
      <button id="downloadBtn" title="Download HTML bundle">Download</button>
      <button id="exportBtn" title="Export as JSON">Export JSON</button>
      <button id="importBtn" title="Import JSON file">Import JSON</button>
      <button id="themeBtn" title="Toggle light/dark">Theme</button>
      <a href="index.html"><button title="Back to Command Center">Back</button></a>
    </div>
  </header>  <main class="grid">
    <section class="panel">
      <h3>HTML</h3>
      <div class="editor"><textarea id="htmlIn" spellcheck="false" placeholder="<!-- Your HTML here -->\n<div class='card'>Hello, Wizz Sandbox.</div>"></textarea><div class="ghost"></div></div>
      <div class="footer">Tip: Press <b>Ctrl + Enter</b> to Run</div>
    </section><section class="panel">
  <h3>CSS</h3>
  <div class="editor"><textarea id="cssIn" spellcheck="false" placeholder=":root{--c:#47b0ff} .card{padding:20px;border-radius:14px;background:#0d1324;color:#e6f0ff;box-shadow:0 10px 30px rgba(0,0,0,.35)}"></textarea><div class="ghost"></div></div>
  <div class="footer">Lightweight. No dependencies.</div>
</section>

<section class="panel">
  <h3>JS</h3>
  <div class="editor"><textarea id="jsIn" spellcheck="false" placeholder="console.log('Wizz ready');"></textarea><div class="ghost"></div></div>
  <div class="footer">Autosave writes locally; use Download to keep files on your phone.</div>
</section>

<section class="panel">
  <h3>Preview</h3>
  <iframe id="out"></iframe>
  <div class="footer">Isolated iframe preview</div>
</section>

  </main>  <script>
  (function(){
    const $ = sel => document.querySelector(sel);
    const htmlIn = $('#htmlIn');
    const cssIn  = $('#cssIn');
    const jsIn   = $('#jsIn');
    const out    = $('#out');
    const status = $('#status');

    const KEY = 'wizz_sandbox_project_v1';
    let autosave = true;
    let saveTimer = null;

    function setStatus(txt, hue='var(--muted)'){
      status.textContent = txt;
      status.style.background = 'rgba(135,170,255,.14)';
      status.style.borderColor = 'rgba(135,170,255,.25)';
      status.style.color = 'var(--ink)';
    }

    function buildDoc(){
      const html = htmlIn.value || '';
      const css  = cssIn.value  || '';
      const js   = jsIn.value   || '';
      return `<!doctype html>\n<html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">\n<style>${css}\n</style></head>\n<body>\n${html}\n<script>try{${js}}catch(e){console.error(e)}<\/script>\n</body></html>`;}

function run(){
  const doc = buildDoc();
  const blob = new Blob([doc], {type:'text/html'});
  const url = URL.createObjectURL(blob);
  out.src = url;
  setStatus('Running');
  // Release blob URL after load to avoid leaks
  out.onload = () => {
    URL.revokeObjectURL(url);
    setStatus('Ready');
  };
}

function saveLocal(){
  const payload = { html: htmlIn.value, css: cssIn.value, js: jsIn.value, t: Date.now() };
  try {
    localStorage.setItem(KEY, JSON.stringify(payload));
    setStatus('Saved');
  } catch(e){
    console.warn('Save failed', e); setStatus('Save Error');
  }
}

function loadLocal(){
  const raw = localStorage.getItem(KEY);
  if(!raw){ setStatus('No Save'); return; }
  try{
    const data = JSON.parse(raw);
    htmlIn.value = data.html || '';
    cssIn.value  = data.css || '';
    jsIn.value   = data.js || '';
    setStatus('Loaded');
    run();
  }catch(e){ setStatus('Load Error'); console.warn(e); }
}

function resetEditors(){
  htmlIn.value = "";
  cssIn.value = "";
  jsIn.value = "";
  setStatus('Reset');
  run();
}

function downloadHTML(){
  const doc = buildDoc();
  const a = document.createElement('a');
  const ts = new Date().toISOString().replace(/[:.]/g,'-');
  a.href = URL.createObjectURL(new Blob([doc], {type:'text/html'}));
  a.download = `wizz-sandbox-${ts}.html`;
  document.body.appendChild(a); a.click(); a.remove();
  setStatus('Downloaded HTML');
}

function exportJSON(){
  const payload = { html: htmlIn.value, css: cssIn.value, js: jsIn.value, exported: new Date().toISOString() };
  const a = document.createElement('a');
  a.href = URL.createObjectURL(new Blob([JSON.stringify(payload, null, 2)], {type:'application/json'}));
  a.download = 'wizz-sandbox-project.json';
  document.body.appendChild(a); a.click(); a.remove();
  setStatus('Exported JSON');
}

function importJSON(){
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = '.json,application/json';
  input.onchange = () => {
    const file = input.files[0];
    if(!file) return;
    const reader = new FileReader();
    reader.onload = () => {
      try{
        const data = JSON.parse(reader.result);
        htmlIn.value = data.html || '';
        cssIn.value  = data.css || '';
        jsIn.value   = data.js || '';
        setStatus('Imported');
        run();
      }catch(e){ setStatus('Import Error'); }
    };
    reader.readAsText(file);
  };
  input.click();
}

// Debounced autosave
function cueAutosave(){
  if(!autosave) return;
  clearTimeout(saveTimer);
  saveTimer = setTimeout(saveLocal, 500);
}

// Wire UI
document.getElementById('runBtn').onclick = run;
document.getElementById('saveBtn').onclick = saveLocal;
document.getElementById('loadBtn').onclick = loadLocal;
document.getElementById('resetBtn').onclick = resetEditors;
document.getElementById('downloadBtn').onclick = downloadHTML;
document.getElementById('exportBtn').onclick = exportJSON;
document.getElementById('importBtn').onclick = importJSON;

// Autosave toggle
const autosaveBtn = document.getElementById('autosaveBtn');
autosaveBtn.onclick = () => {
  autosave = !autosave;
  autosaveBtn.textContent = `Autosave: ${autosave ? 'On' : 'Off'}`;
  setStatus(autosave ? 'Autosave On' : 'Autosave Off');
};

// Theme toggle
const themeBtn = document.getElementById('themeBtn');
themeBtn.onclick = () => {
  const current = document.documentElement.getAttribute('data-theme');
  const next = current === 'light' ? null : 'light';
  if(next) document.documentElement.setAttribute('data-theme', next);
  else document.documentElement.removeAttribute('data-theme');
};

// Inputs
for (const el of [htmlIn, cssIn, jsIn]){
  el.addEventListener('input', cueAutosave);
}

// Keyboard shortcuts
window.addEventListener('keydown', (e)=>{
  if(e.key === 'Enter' && (e.ctrlKey || e.metaKey)){ e.preventDefault(); run(); }
  if((e.ctrlKey || e.metaKey) && e.key.toLowerCase() === 's'){ e.preventDefault(); saveLocal(); }
});

// First boot — try load existing project
loadLocal();
if(!localStorage.getItem(KEY)) run();

})(); </script>

</body>
</html>
